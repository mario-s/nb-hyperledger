options {
  JAVA_UNICODE_ESCAPE = true;
  BUILD_PARSER = false;
}

PARSER_BEGIN(Cto)

package org.netbeans.modules.hyperledger.cto.lexer;

/** Simple brace matcher. */
public class Cto {

  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    Cto parser = new Cto(System.in);
    parser.Input();
  }

}

PARSER_END(Cto)


SKIP : { " " }
TOKEN: { <EOL : "\n" | "\r" | "\r\n"> }
TOKEN: { <NAMESPACE : "namespace"> }
TOKEN: { <ASSET : "asset"> }
TOKEN: { <PARTICIPANT : "participant"> }
TOKEN: { <TRANSACTION : "transaction"> }
TOKEN: { <EVENT : "event"> }
TOKEN: { <FIELD : "o "> }
TOKEN: { <REF: "-->"> } 
TOKEN: { <IDENTIFIED: "identified by"> }
TOKEN: { <SINGLE_LINE_COMMENT: "//" (~["\n","\r"])* ("\n" | "\r" | "\r\n")?> }


/***********
 * Grammar *
/***********

/** Root production. */
void Input() :
{}
{
  MatchedBraces() (<EOL>)* <EOF>
}

/** Brace matching production. */
void MatchedBraces() :
{}
{
  "{" [ MatchedBraces() ] "}"
}


void NamespaceDeclaration() :
{}
{
  <NAMESPACE> Name() ";"
}

void Name() :
{}
{
    "TODO"
}